{"ast":null,"code":"var _jsxFileName = \"/Users/jihad.bunkheila/Desktop/Jihad/citizenChrome/textGrabber/Bottom_Line/Bottom_Line/src/Profile.js\";\nimport React, { Component } from 'react';\nimport { Person, lookupProfile } from 'blockstack';\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: {\n        name() {\n          return 'Anonymous';\n        },\n\n        avatarUrl() {\n          return avatarFallbackImage;\n        }\n\n      },\n      username: \"\",\n      newStatus: \"\",\n      statuses: [],\n      statusIndex: 0,\n      isLoading: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSignOut = _this$props.handleSignOut,\n          userSession = _this$props.userSession;\n    const person = this.state.person;\n    const username = this.state.username;\n    return !userSession.isSignInPending() && person ? React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-offset-3 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage,\n      className: \"img-rounded avatar\",\n      id: \"avatar-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"heading-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, person.name() ? person.name() : 'Bottom Line')), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, username), this.isLocal() && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\xA0|\\xA0\", React.createElement(\"a\", {\n      onClick: handleSignOut.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"(Logout)\"))))), this.isLocal() && React.createElement(\"div\", {\n      className: \"new-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-12 statuses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.isLoading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Loading...\"), this.state.statuses.map(status => React.createElement(\"div\", {\n      className: \"status\",\n      key: status.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, status.text)))))) : null;\n  }\n\n  componentWillMount() {\n    const userSession = this.props.userSession;\n    this.setState({\n      person: new Person(userSession.loadUserData().profile),\n      username: userSession.loadUserData().username\n    });\n  }\n\n  handleNewStatusChange(event) {\n    this.setState({\n      newStatus: event.target.value\n    });\n  }\n\n  handleNewStatusSubmit(event) {\n    this.saveNewStatus(this.state.newStatus);\n    this.setState({\n      newStatus: \"\"\n    });\n  }\n\n  saveNewStatus(statusText) {\n    const userSession = this.props.userSession;\n    let statuses = this.state.statuses;\n    let status = {\n      id: this.state.statusIndex++,\n      text: statusText.trim(),\n      created_at: Date.now()\n    };\n    statuses.unshift(status);\n    const options = {\n      encrypt: false\n    };\n    userSession.putFile('statuses.json', JSON.stringify(statuses), options).then(() => {\n      this.setState({\n        statuses: statuses\n      });\n    });\n  }\n\n  fetchData() {\n    const userSession = this.props.userSession;\n    this.setState({\n      isLoading: true\n    });\n\n    if (this.isLocal()) {\n      const options = {\n        decrypt: false\n      };\n      userSession.getFile('statuses.json', options).then(file => {\n        var statuses = JSON.parse(file || '[]');\n        this.setState({\n          person: new Person(userSession.loadUserData().profile),\n          username: userSession.loadUserData().username,\n          statusIndex: statuses.length,\n          statuses: statuses\n        });\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    } else {\n      const username = this.props.match.params.username;\n      lookupProfile(username).then(profile => {\n        this.setState({\n          person: new Person(profile),\n          username: username\n        });\n      }).catch(error => {\n        console.log('could not resolve profile');\n      });\n      const options = {\n        username: username,\n        decrypt: false\n      };\n      userSession.getFile('statuses.json', options).then(file => {\n        var statuses = JSON.parse(file || '[]');\n        this.setState({\n          statusIndex: statuses.length,\n          statuses: statuses\n        });\n      }).catch(error => {\n        console.log('could not fetch statuses');\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  isLocal() {\n    return this.props.match.params.username ? false : true;\n  }\n\n}","map":{"version":3,"sources":["/Users/jihad.bunkheila/Desktop/Jihad/citizenChrome/textGrabber/Bottom_Line/Bottom_Line/src/Profile.js"],"names":["React","Component","Person","lookupProfile","avatarFallbackImage","Profile","constructor","props","state","person","name","avatarUrl","username","newStatus","statuses","statusIndex","isLoading","render","handleSignOut","userSession","isSignInPending","isLocal","bind","map","status","id","text","componentWillMount","setState","loadUserData","profile","handleNewStatusChange","event","target","value","handleNewStatusSubmit","saveNewStatus","statusText","trim","created_at","Date","now","unshift","options","encrypt","putFile","JSON","stringify","then","fetchData","decrypt","getFile","file","parse","length","finally","match","params","catch","error","console","log","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Person,\n  lookupProfile\n} from 'blockstack';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\nexport default class Profile extends Component {\n  constructor(props) {\n  \tsuper(props);\n\n  \tthis.state = {\n  \t  person: {\n  \t  \tname() {\n          return 'Anonymous';\n        },\n  \t  \tavatarUrl() {\n  \t  \t  return avatarFallbackImage;\n  \t  \t},\n      },\n      username: \"\",\n      newStatus: \"\",\n      statuses: [],\n      statusIndex: 0,\n      isLoading: false\n  \t};\n  }\n\n  render() {\n    const { handleSignOut, userSession } = this.props;\n    const { person } = this.state;\n    const { username } = this.state;\n   \n    return (\n      !userSession.isSignInPending() && person ?\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-offset-3 col-md-6\">\n            <div className=\"col-md-12\">\n              <div className=\"avatar-section\">\n                <img\n                  src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage }\n                  className=\"img-rounded avatar\"\n                  id=\"avatar-image\"\n                />\n                <div className=\"username\">\n                  <h1>\n                    <span id=\"heading-name\">{ person.name() ? person.name()\n                      : 'Bottom Line' }</span>\n                  </h1>\n                  <span>{username}</span>\n                  {this.isLocal() &&\n                    <span>\n                      &nbsp;|&nbsp;\n                      <a onClick={ handleSignOut.bind(this) }>(Logout)</a>\n                    </span>\n                  }\n                </div>\n              </div>\n            </div>\n            {this.isLocal() &&\n              <div className=\"new-status\">\n\n              </div>\n            }\n            <div className=\"col-md-12 statuses\">\n            {this.state.isLoading && <span>Loading...</span>}\n            {this.state.statuses.map((status) => (\n                <div className=\"status\" key={status.id}>\n                  {status.text}\n                </div>\n                )\n            )}\n            </div>\n          </div>\n        </div>\n      </div> : null\n    );\n  }\n\n  componentWillMount() {\n    const { userSession } = this.props;\n    this.setState({\n      person: new Person(userSession.loadUserData().profile),\n      username: userSession.loadUserData().username\n    });\n  }\n  handleNewStatusChange(event) {\n    this.setState({newStatus: event.target.value})\n  }\n  handleNewStatusSubmit(event) {\n    this.saveNewStatus(this.state.newStatus)\n    this.setState({\n      newStatus: \"\"\n    })\n  }\n  saveNewStatus(statusText) {\n    const { userSession } = this.props\n    let statuses = this.state.statuses\n\n    let status = {\n      id: this.state.statusIndex++,\n      text: statusText.trim(),\n      created_at: Date.now()\n    }\n\n    statuses.unshift(status)\n    const options = { encrypt: false}\n    userSession.putFile('statuses.json', JSON.stringify(statuses), options)\n      .then(() => {\n        this.setState({\n          statuses: statuses\n        })\n      })\n  }\n  fetchData() {\n    const { userSession } = this.props\n    this.setState({ isLoading: true })\n    if (this.isLocal()) {\n      const options = { decrypt: false }\n      userSession.getFile('statuses.json', options)\n        .then((file) => {\n          var statuses = JSON.parse(file || '[]')\n          this.setState({\n            person: new Person(userSession.loadUserData().profile),\n            username: userSession.loadUserData().username,\n            statusIndex: statuses.length,\n            statuses: statuses,\n          })\n        })\n        .finally(() => {\n          this.setState({ isLoading: false})\n        })\n    } else {\n      const username = this.props.match.params.username\n\n      lookupProfile(username)\n        .then((profile) => {\n          this.setState({\n            person: new Person(profile),\n            username: username\n          })\n        })\n        .catch((error) => {\n          console.log('could not resolve profile')\n        })\n        const options = { username: username, decrypt: false }\n        userSession.getFile('statuses.json', options)\n          .then((file) => {\n            var statuses = JSON.parse(file || '[]')\n            this.setState({\n              statusIndex: statuses.length,\n              statuses: statuses\n            })\n          })\n          .catch((error) => {\n            console.log('could not fetch statuses')\n          })\n          .finally(() => {\n            this.setState({ isLoading: false})\n          })\n      }\n    }\n  componentDidMount() {\n    this.fetchData()\n  }\n  isLocal() {\n    return this.props.match.params.username ? false : true\n  }\n}"]},"metadata":{},"sourceType":"module"}